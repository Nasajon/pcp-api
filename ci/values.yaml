replicaCount: 2

image:
  repository: hub.nasajon.com.br/pcp
  pullPolicy: Always
  tag: "{{ TAG }}"

imagePullSecrets: 
  - name: hub
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 80
  targetPort: 80

ingress:
  enabled: true
  className: nginx
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  hosts:
  - host: api4.nasajon.app
    paths:
      - path: /pcp
        pathType: ImplementationSpecific
  tls:
    - secretName: api4-nasajon-tls
      hosts:
        - api4.nasajon.app

configMap:
  create: true
  name: "pcp"
  data:
    PYTHONPATH: C:\projetos\producao-api
    FLASK_APP: nasajon/wsgi.py
    APP_NAME: pcp_api
    DEBUG: True
    MOPE_CODE: 
    DATABASE_HOST: localhost
    DATABASE_PASS: postgres
    DATABASE_PORT: 5433
    SERVER_PORT: 5000
    OAUTH_CLIENT_ID: pcp_api
    OAUTH_TOKEN_INTROSPECTION_URL: https://auth.dev.nasajonsistemas.com.br/auth/realms/DEV/protocol/openid-connect/token/introspect
    PROFILE_ENDPOINT: https://auth.dev.nasajonsistemas.com.br/auth/realms/DEV/protocol/openid-connect/userinfo
    DIRETORIO_ENDPOINT: https://dir.dev.nasajonsistemas.com.br
    APIKEY_VALIDATE_URL: https://dir.nasajonsistemas.com.br/v2/api/validate
    CACHE_URL: http://localhost:5001/recents

secret:
  create: true
  name: "pcp"
  data: 
    DATABASE_NAME: tutorial
    DATABASE_USER: postgres 

resources: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}